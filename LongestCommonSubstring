#include <iostream>
#include <vector>
using namespace std;


string thelongestCommonSubstring(string s1, string s2) {
    int n = s1.length();
    vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0));
    int maxtheLength = 0, endofIndex = 0;

   
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= n; j++) {
            if (s1[i - 1] == s2[j - 1]) {
                dp[i][j] = dp[i - 1][j - 1] + 1;
                if (dp[i][j] > maxtheLength) {
                    maxtheLength = dp[i][j];
                    endofIndex = i;
                }
            }
        }
    }

    
    cout << "Lookup Table:\n";
    for (int i = 0; i <= n; i++) {
        for (int j = 0; j <= n; j++) {
            cout << dp[i][j] << " ";
        }
        cout << endl;
    }

    
    return s1.substr(endofIndex - maxtheLength, maxtheLength);
}

int main() {
    string s1, s2;
    cout << "Enter the first string: ";
    cin >> s1;
    cout << "Enter the second string: ";
    cin >> s2;
    
    string result = thelongestCommonSubstring(s1, s2);
    cout << "Longest Common Substring: " << result << endl;
    
    return 0;
}
